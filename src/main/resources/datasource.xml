<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder location="classpath:datasource.properties" />

	<!-- configure an Atomikos JTA-aware datasource -->
	<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<!-- set an arbitrary but unique name for the datasource -->
		<property name="uniqueResourceName">
			<value>XADBMS</value>
		</property>
		<property name="xaDataSourceClassName">
			<value>${jdbc.xa.driverClassName}</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
				<prop key="URL">jdbc:h2:file:/tmp/books</prop>
			</props>
		</property>
		<property name="poolSize" value="3" />
	</bean>

	<bean id="bookSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		lazy-init="false" autowire="no">
		<qualifier value="bookSessionFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>sk.garwan.jms2pc.domain.Book</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

</beans>			